"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4568],{4809:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"neoedge-ng4500-series/application-guide/DINOv3","title":"DINOv3","description":"---","source":"@site/docs/1-neoedge-ng4500-series/3-application-guide/4-DINOv3.md","sourceDirName":"1-neoedge-ng4500-series/3-application-guide","slug":"/neoedge-ng4500-series/application-guide/DINOv3","permalink":"/wiki-documents/zh-Hans/docs/neoedge-ng4500-series/application-guide/DINOv3","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Object Detection","permalink":"/wiki-documents/zh-Hans/docs/neoedge-ng4500-series/application-guide/object-detection"},"next":{"title":"Nx Meta Platfrom","permalink":"/wiki-documents/zh-Hans/docs/neoedge-ng4500-series/application-guide/nx-meta"}}');var t=r(74848),s=r(28453);const a={},d="DINOv3",l={},c=[{value:"1. \u6982\u89c8",id:"1-\u6982\u89c8",level:2},{value:"2. \u73af\u5883\u51c6\u5907",id:"2-\u73af\u5883\u51c6\u5907",level:2},{value:"\u786c\u4ef6\u9700\u6c42",id:"\u786c\u4ef6\u9700\u6c42",level:3},{value:"\u8f6f\u4ef6\u9700\u6c42",id:"\u8f6f\u4ef6\u9700\u6c42",level:3},{value:"3. \u57fa\u4e8eDINOv3\u7684Patch\u7279\u5f81\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6848\u4f8b",id:"3-\u57fa\u4e8edinov3\u7684patch\u7279\u5f81\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6848\u4f8b",level:2},{value:"3.1 \u7cfb\u7edf\u73af\u5883\u5b89\u88c5",id:"31-\u7cfb\u7edf\u73af\u5883\u5b89\u88c5",level:3},{value:"3.2 \u83b7\u53d6DINOv3\u6e90\u7801",id:"32-\u83b7\u53d6dinov3\u6e90\u7801",level:3},{value:"3.3 \u521b\u5efa\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6d4b\u8bd5\u4ee3",id:"33-\u521b\u5efa\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6d4b\u8bd5\u4ee3",level:3},{value:"3.4 \u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",id:"34-\u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",level:3},{value:"3.5 \u6d4b\u8bd5\u9a8c\u8bc1",id:"35-\u6d4b\u8bd5\u9a8c\u8bc1",level:3},{value:"4. \u57fa\u4e8eDINOv3+KMeans\u7684\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6848\u4f8b",id:"4-\u57fa\u4e8edinov3kmeans\u7684\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6848\u4f8b",level:2},{value:"4.1 \u539f\u7406\u7b80\u4ecb",id:"41-\u539f\u7406\u7b80\u4ecb",level:3},{value:"4.2 \u73af\u5883\u51c6\u5907",id:"42-\u73af\u5883\u51c6\u5907",level:3},{value:"4.3 \u83b7\u53d6 DINOv3 \u6e90\u7801",id:"43-\u83b7\u53d6-dinov3-\u6e90\u7801",level:3},{value:"4.4 \u521b\u5efa\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6d4b\u8bd5\u4ee3\u7801",id:"44-\u521b\u5efa\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6d4b\u8bd5\u4ee3\u7801",level:3},{value:"4.5 \u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",id:"45-\u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",level:3},{value:"4.6 \u6d4b\u8bd5\u9a8c\u8bc1",id:"46-\u6d4b\u8bd5\u9a8c\u8bc1",level:3},{value:"5.\xa0 \u53c2\u8003\u8d44\u6e90",id:"5-\u53c2\u8003\u8d44\u6e90",level:2}];function o(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dinov3",children:"DINOv3"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6587\u8be6\u7ec6\u8bf4\u660e\u5982\u4f55\u5728 NVIDIA Jetson Orin \u5e73\u53f0\u90e8\u7f72Meta 2025\u5e74\u53d1\u5e03\u7684 DINOv3 \u8d85\u7ea7\u89c6\u89c9\u57fa\u7840\u6a21\u578b\uff0c\u6db5\u76d6\u6a21\u578b\u4ecb\u7ecd\u3001\u7cfb\u7edf\u8981\u6c42\u3001\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u53ca\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u4e24\u4e2a\u6838\u5fc3\u5e94\u7528\u6848\u4f8b\uff0c\u5e2e\u52a9\u5f00\u53d1\u8005\u5feb\u901f\u4e0a\u624b\u5e76\u7406\u89e3DINOv3\u7684\u89c6\u89c9\u8868\u5f81\u80fd\u529b\u3002"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"1-\u6982\u89c8",children:"1. \u6982\u89c8"}),"\n",(0,t.jsx)(n.p,{children:"DINOv3\u662f\u57fa\u4e8e \u81ea\u76d1\u7763\u5b66\u4e60+Gram anchoring \u6280\u672f\u7684\u89c6\u89c9Transformer\uff08ViT\uff09\u6a21\u578b\uff0c\u76f8\u6bd4DINOv2\u3001MoCo\u7b49\u524d\u4ee3\u6a21\u578b\uff0c\u5728\u7279\u5f81\u63d0\u53d6\u7684\u6cdb\u5316\u6027\u3001\u5bc6\u96c6\u7279\u5f81\u8d28\u91cf\u53ca\u7a7a\u95f4\u7ed3\u6784\u7406\u89e3\u80fd\u529b\u4e0a\u6709\u663e\u8457\u63d0\u5347\u3002\u5176\u6838\u5fc3\u53c2\u6570\u4e0e\u4f18\u52bf\u5982\u4e0b\uff1a"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0\u53c2\u6570\u91cf \uff1a\u63d0\u4f9b7B\uff0870\u4ebf\u53c2\u6570\uff09\u7b49\u591a\u89c4\u683c\uff0c\u9002\u914d\u4e0d\u540c\u8ba1\u7b97\u8d44\u6e90\u9700\u6c42\uff1b"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0\u8bad\u7ec3\u6570\u636e \uff1a\u57fa\u4e8e17\u4ebf\u5f20\u56fe\u7247\u7684\u8d85\u5927\u89c4\u6a21\u6570\u636e\u96c6\uff08\u5982LVD-1689M\uff09\uff0c\u8986\u76d6\u4e30\u5bcc\u573a\u666f\uff1b"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0\u6838\u5fc3\u6280\u672f \uff1aGram anchoring\u673a\u5236\u5f3a\u5316\u7279\u5f81\u95f4\u5173\u7cfb\u5efa\u6a21\uff0c\u89e3\u51b3\u4f20\u7edfViT\u7684\u5c40\u90e8\u7279\u5f81\u5f31\u95ee\u9898\uff1b"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0\u529f\u80fd\u7279\u6027 \uff1a\u652f\u6301 \u591a\u4efb\u52a1\uff08\u5206\u7c7b\u3001\u5206\u5272\u3001\u68c0\u6d4b\uff09\u3001\u591a\u5206\u8fa8\u7387\uff08\u8f93\u5165\u5c3a\u5bf8\u7075\u6d3b\uff09\u3001\u5bc6\u96c6\u7279\u5f81\u63d0\u53d6\uff08\u9010patch\u7279\u5f81\u8f93\u51fa\uff09 \uff1b"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0\u6027\u80fd\u4f18\u52bf \uff1a\u5728ImageNet\u3001COCO\u7b49\u57fa\u51c6\u6570\u636e\u96c6\u4e0a\uff0c\u5206\u7c7b\u3001\u5206\u5272\u4efb\u52a1\u6027\u80fd\u5168\u9762\u8d85\u8d8a\uff1b"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u65b9\u6cd5"}),(0,t.jsx)(n.th,{children:"\u4f18\u52bf"}),(0,t.jsx)(n.th,{children:"\u5c40\u9650\u6027"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"MoCo/SimCLR"}),(0,t.jsx)(n.td,{children:"\u7b80\u5355\u9ad8\u6548\uff0c\u4e2a\u4f53\u5224\u522b"}),(0,t.jsx)(n.td,{children:"\u5c40\u90e8\u7279\u5f81\u5f31"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"iBOT/BEiT/MAE"}),(0,t.jsx)(n.td,{children:"inpainting\u4efb\u52a1\uff0c\u5bc6\u96c6\u7279\u5f81\u5f3a"}),(0,t.jsx)(n.td,{children:"\u5168\u5c40\u4e00\u81f4\u6027\u4e0d\u8db3"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DINOv2"}),(0,t.jsx)(n.td,{children:"\u81ea\u84b8\u998f+\u5bf9\u6bd4\u5b66\u4e60\uff0c\u6027\u80fd\u5f3a"}),(0,t.jsx)(n.td,{children:"\u5927\u6a21\u578b\uff08\u5982ViT-L\uff09\u5bc6\u96c6\u7279\u5f81\u9000\u5316"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"DINOv3"}),(0,t.jsx)(n.td,{children:"Gram anchoring\uff0c\u6781\u5927\u89c4\u6a21\uff0c\u5bc6\u96c6\u7279\u5f81\u4f18"}),(0,t.jsx)(n.td,{children:"\u8bad\u7ec3\u8d44\u6e90\u9700\u6c42\u6781\u9ad8"})]})]})]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"2-\u73af\u5883\u51c6\u5907",children:"2. \u73af\u5883\u51c6\u5907"}),"\n",(0,t.jsx)(n.h3,{id:"\u786c\u4ef6\u9700\u6c42",children:"\u786c\u4ef6\u9700\u6c42"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u7ec4\u4ef6"}),(0,t.jsx)(n.th,{children:"\u8981\u6c42"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u8bbe\u5907"}),(0,t.jsx)(n.td,{children:"Jetson Orin\uff08Nano / NX / AGX\uff09"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u5185\u5b58"}),(0,t.jsx)(n.td,{children:"\u2265 8GB\uff08\u66f4\u5927\u6a21\u578b\u9700\u66f4\u9ad8\u5185\u5b58\uff09"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"\u5b58\u50a8\u7a7a\u95f4"}),(0,t.jsx)(n.td,{children:"\u2265 64GB\uff08\u53d6\u51b3\u4e8e\u6a21\u578b\u5927\u5c0f\uff09"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"GPU"}),(0,t.jsx)(n.td,{children:"\u652f\u6301 CUDA \u7684 NVIDIA GPU"})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"\u8f6f\u4ef6\u9700\u6c42",children:"\u8f6f\u4ef6\u9700\u6c42"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Ubuntu 20.04 / 22.04\uff08\u5efa\u8bae\u4f7f\u7528 JetPack 5.1.1+\uff09"}),"\n",(0,t.jsx)(n.li,{children:"NVIDIA CUDA \u5de5\u5177\u5305\u548c\u9a71\u52a8\uff08JetPack \u5df2\u9884\u88c5\uff09"}),"\n",(0,t.jsx)(n.li,{children:"Docker\uff08\u53ef\u9009\uff0c\u7528\u4e8e\u5bb9\u5668\u5316\u90e8\u7f72\uff09"}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["\u2699\ufe0f \u4f7f\u7528 ",(0,t.jsx)(n.code,{children:"jetson_clocks"})," \u548c\u68c0\u67e5 ",(0,t.jsx)(n.code,{children:"nvpmodel"}),"\uff0c\u542f\u7528\u6700\u5927\u6027\u80fd\u6a21\u5f0f\u4ee5\u83b7\u5f97\u6700\u4f73\u63a8\u7406\u6548\u679c\u3002"]}),"\n"]}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"3-\u57fa\u4e8edinov3\u7684patch\u7279\u5f81\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6848\u4f8b",children:"3. \u57fa\u4e8eDINOv3\u7684Patch\u7279\u5f81\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6848\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6848\u4f8b\u901a\u8fc7 DINOv3\u63d0\u53d6\u56fe\u50cfpatch\u7279\u5f81 \uff0c\u8ba1\u7b97\u6307\u5b9apatch\u4e0e\u5176\u4ed6patch\u7684 \u4f59\u5f26\u76f8\u4f3c\u6027 \uff0c\u751f\u6210\u70ed\u529b\u56fe\u5c55\u793a\u6a21\u578b\u5bf9\u56fe\u50cf\u7a7a\u95f4\u7ed3\u6784\u7684\u7406\u89e3\u80fd\u529b\uff08\u5982\u7269\u4f53\u90e8\u4ef6\u5173\u8054\u3001\u8f6e\u5ed3\u8fb9\u754c\u7b49\uff09\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"31-\u7cfb\u7edf\u73af\u5883\u5b89\u88c5",children:"3.1 \u7cfb\u7edf\u73af\u5883\u5b89\u88c5"}),"\n",(0,t.jsx)(n.p,{children:"\u5b89\u88c5JetPack SDK\u53caPython\u6838\u5fc3\u4f9d\u8d56\uff0c\u786e\u4fdd\u73af\u5883\u517c\u5bb9\u6027\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'sudo apt update\r\nsudo apt install python3-pip git -y\r\npip3 install --upgrade pip\r\npip3 install pillow transformers accelerate modelscope opencv-python tqdm addict simplejson sortedcontainers\r\npip install numpy==1.24.4\r\npip install "pyarrow==12.0.1"\r\npip install "modelscope[datasets]"\n'})}),"\n",(0,t.jsx)(n.h3,{id:"32-\u83b7\u53d6dinov3\u6e90\u7801",children:"3.2 \u83b7\u53d6DINOv3\u6e90\u7801"}),"\n",(0,t.jsx)(n.p,{children:"\u83b7\u53d6Facebook Research\u5b98\u65b9\u4ed3\u5e93\uff0c\u83b7\u53d6\u6a21\u578b\u6846\u67b6\u4ee3\u7801\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/facebookresearch/dinov3.git\r\ncd dinov3\n"})}),"\n",(0,t.jsx)(n.h3,{id:"33-\u521b\u5efa\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6d4b\u8bd5\u4ee3",children:"3.3 \u521b\u5efa\u70ed\u529b\u56fe\u53ef\u89c6\u5316\u6d4b\u8bd5\u4ee3"}),"\n",(0,t.jsx)(n.p,{children:"\u65b0\u5efatest_dinov3\u76ee\u5f55\u53cadinov3_vision_test.py\u6587\u4ef6\uff0c\u6307\u4ee4\u5982\u4e0b"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \u65b0\u5efa\u5de5\u4f5c\u76ee\u5f55\r\nmkdir test_dinov3\r\ncd test_dinov3\r\n\r\n# \u7f16\u8f91\u6d4b\u8bd5\u4ee3\u7801\r\nvim dinov3_vision_test.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a"})}),"\n",(0,t.jsx)(n.p,{children:"\u6ce8\uff1a\u5982\u9700\u5207\u6362 DINOv3 \u4e0d\u540c\u6a21\u578b\uff08ViT Small/Base/Large\u3001ConvNeXT\uff09\uff0c\u8bf7\u53c2\u8003\u4e0b\u8868\u4fee\u6539\u6a21\u578b\u5bfc\u5165\u548c\u5b9e\u4f8b\u5316\u4ee3\u7801\u3002\u6743\u91cd\u6587\u4ef6\u4e5f\u9700\u4e0e\u6a21\u578b\u7c7b\u578b\u5bf9\u5e94\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002(\u5982\u9700\u4f7f\u7528\u66f4\u591a\u6a21\u578b\u67b6\u6784\u5b9a\u4e49\uff0c\u53ef\u4ee5\u53c2\u8003dinov3/models/vision_transformer.py)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u6a21\u578b\u7c7b\u578b"}),(0,t.jsx)(n.th,{children:"\u5bfc\u5165\u65b9\u5f0f"}),(0,t.jsx)(n.th,{children:"\u5b9e\u4f8b\u5316\u65b9\u5f0f"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Small"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_small"}),(0,t.jsx)(n.td,{children:"model = vit_small(patch_size=16)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Base"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_base"}),(0,t.jsx)(n.td,{children:"model = vit_base(patch_size=16)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Huge"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_huge2"}),(0,t.jsx)(n.td,{children:"model = vit_huge2(patch_size=16)"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"import torch\r\nimport torchvision.transforms as transforms\r\nimport torch.nn.functional as F\r\nimport matplotlib.pyplot as plt\r\nfrom PIL import Image\r\nimport argparse\r\nimport os\r\n\r\n# 1. \u5bfc\u5165\u6a21\u578b\u7ed3\u6784,\r\nfrom dinov3.models.vision_transformer import vit_base\r\n\r\ndef compute_patch_similarity_heatmap(patch_features, H, W, target_patch_coord):\r\n    target_idx = target_patch_coord[0] * W + target_patch_coord[1]\r\n    target_feature = patch_features[0, target_idx]\r\n    similarities = F.cosine_similarity(\r\n        target_feature.unsqueeze(0),\r\n        patch_features[0],\r\n        dim=1\r\n    )\r\n    heatmap = similarities.reshape(H, W).cpu().numpy()\r\n    return heatmap\r\n\r\ndef plot_similarity_heatmap(heatmap, target_patch_coord, save_path=None):\r\n    H, W = heatmap.shape\r\n    fig, ax = plt.subplots(figsize=(10, 8))\r\n    im = ax.imshow(heatmap, cmap='viridis', aspect='equal')\r\n    ax.plot(target_patch_coord[1], target_patch_coord[0], 'ro', markersize=10)\r\n    plt.colorbar(im, ax=ax, label='Cosine Similarity') \r\n    ax.set_xlabel('Width (patch index)')\r\n    ax.set_ylabel('Height (patch index)')\r\n    ax.set_title(f'Cosine Similarity to Patch at {target_patch_coord}')\r\n    plt.tight_layout()\r\n    if save_path:\r\n        plt.savefig(save_path)\r\n        print(f\"Heatmap saved to {save_path}\")\r\n    else:\r\n        plt.show()\r\n    plt.close(fig)\r\n    return fig, ax\r\n\r\ndef main(image_path, model_path, patch_size=16, input_size=224, output_path=\"patch_similarity_heatmap.png\"):\r\n    # 1. \u52a0\u8f7d\u56fe\u7247\r\n    image = Image.open(image_path).convert(\"RGB\")\r\n    transform = transforms.Compose([\r\n        transforms.Resize((input_size, input_size)),\r\n        transforms.ToTensor(),\r\n    ])\r\n    tensor_image = transform(image).unsqueeze(0)  # (1, 3, H, W)\r\n\r\n    # 2. \u52a0\u8f7d\u6a21\u578b\u7ed3\u6784\u548c\u6743\u91cd\r\n    #model = vit_small(patch_size=patch_size)\r\n    model = vit_base(patch_size=patch_size)\r\n    state_dict = torch.load(model_path, map_location=\"cpu\")\r\n    model.load_state_dict(state_dict, strict=False)\r\n    model.eval()\r\n    if torch.cuda.is_available():\r\n        model.cuda()\r\n        tensor_image = tensor_image.cuda()\r\n\r\n    # 3. \u63d0\u53d6 patch \u7279\u5f81\u5e76\u53ef\u89c6\u5316\r\n    with torch.no_grad():\r\n        features_dict = model.forward_features(tensor_image)\r\n        patch_features = features_dict[\"x_norm_patchtokens\"]\r\n        num_patches = patch_features.shape[1]\r\n        H = W = int(num_patches ** 0.5)\r\n        target_patch_coord = (H // 2, W // 2)  # \u9009\u4e2d\u5fc3patch\r\n        heatmap = compute_patch_similarity_heatmap(patch_features, H, W, target_patch_coord)\r\n        plot_similarity_heatmap(heatmap, target_patch_coord, save_path=output_path)\r\n\r\nif __name__ == '__main__':\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument('--image', type=str, required=True, help='Path to input image')\r\n    parser.add_argument('--model', type=str, required=True, help='Path to DINOv3 .pth model')\r\n    parser.add_argument('--patch_size', type=int, default=16, help='Patch size (default=16)')\r\n    parser.add_argument('--input_size', type=int, default=224, help='Input image size (default=224)')\r\n    parser.add_argument('--output', type=str, default='patch_similarity_heatmap.png', help='Output heatmap image path')\r\n    args = parser.parse_args()\r\n    main(args.image, args.model, args.patch_size, args.input_size, args.output)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"34-\u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",children:"3.4 \u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b"}),"\n",(0,t.jsx)(n.p,{children:"DINOv3\u63d0\u4f9b\u591a\u79cd\u67b6\u6784\uff08ViT Small/Base/Large\u3001ConvNeXT\uff09\u53ca\u8bad\u7ec3\u96c6\uff08LVD-1689M\u3001SAT-493M\uff09\u7684\u9884\u8bad\u7ec3\u6743\u91cd\uff0c\u53ef\u4eceHugging Face\u3002\u5e38\u7528\u6a21\u578b\u5982\u4e0b\uff1a"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u6a21\u578b\u540d\u79f0\uff08Hugging Face\uff09"}),(0,t.jsx)(n.th,{children:"\u53c2\u6570\u91cf"}),(0,t.jsx)(n.th,{children:"Hugging Face\u4ed3\u5e93"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vits16-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"21M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vits16-pretrain-lvd1689m",children:"facebook/dinov3-vits16-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vits16plus-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"29M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vits16plus-pretrain-lvd1689m",children:"facebook/dinov3-vits16plus-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vitb16-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"86M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vitb16-pretrain-lvd1689m",children:"facebook/dinov3-vitb16-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vitl16-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"300M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vitl16-pretrain-lvd1689m",children:"facebook/dinov3-vitl16-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vith16plus-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"840M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vith16plus-pretrain-lvd1689m",children:"facebook/dinov3-vith16plus-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vit7b16-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"6,716M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vit7b16-pretrain-lvd1689m",children:"facebook/dinov3-vit7b16-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vitl16-pretrain-sat493m"}),(0,t.jsx)(n.td,{children:"300M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vitl16-pretrain-sat493m",children:"facebook/dinov3-vitl16-pretrain-sat493m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-vit7b16-pretrain-sat493m"}),(0,t.jsx)(n.td,{children:"6,716M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-vit7b16-pretrain-sat493m",children:"facebook/dinov3-vit7b16-pretrain-sat493m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-convnext-tiny-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"29M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-convnext-tiny-pretrain-lvd1689m",children:"facebook/dinov3-convnext-tiny-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-convnext-small-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"50M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-convnext-small-pretrain-lvd1689m",children:"facebook/dinov3-convnext-small-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-convnext-base-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"89M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-convnext-base-pretrain-lvd1689m",children:"facebook/dinov3-convnext-base-pretrain-lvd1689m"})})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"dinov3-convnext-large-pretrain-lvd1689m"}),(0,t.jsx)(n.td,{children:"198M"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook/dinov3-convnext-large-pretrain-lvd1689m",children:"facebook/dinov3-convnext-large-pretrain-lvd1689m"})})]})]})]}),"\n",(0,t.jsx)(n.h3,{id:"35-\u6d4b\u8bd5\u9a8c\u8bc1",children:"3.5 \u6d4b\u8bd5\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u751f\u6210\u6307\u5b9a\u56fe\u50cf\u7684\u70ed\u529b\u56fe\uff08\u4ee5ViT Base\u6a21\u578b\u4e3a\u4f8b\uff09\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"python dinov_vision_test.py --image test.png --model dinov3_vits16_pretrain_lvd1689m.pth --output patch_similarity_heatmap.png\n"})}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0--image: \u8f93\u5165\u56fe\u7247\u7684\u8def\u5f84\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0--model: \u9009\u62e9\u7684DINOv3\u6a21\u578b\u3002"}),"\n",(0,t.jsx)(n.p,{children:"\u25cf\xa0--output: \u8f93\u51fa\u7684\u70ed\u529b\u56fe\u6587\u4ef6\u8def\u5f84\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a"})}),"\n",(0,t.jsx)(n.p,{children:"\u8f93\u51fa\u7684 patch_similarity_heatmap.png \u70ed\u529b\u56fe\uff0c\u76f4\u89c2\u53cd\u6620\u6307\u5b9a patch \u4e0e\u5176\u5b83 patch \u7684\u76f8\u4f3c\u6027\uff0c\u4f53\u73b0 DINOv3 \u5bf9\u7a7a\u95f4\u7ed3\u6784\u7684\u7406\u89e3\u80fd\u529b\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(76251).A+"",width:"900",height:"1040"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h2,{id:"4-\u57fa\u4e8edinov3kmeans\u7684\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6848\u4f8b",children:"4. \u57fa\u4e8eDINOv3+KMeans\u7684\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6848\u4f8b"}),"\n",(0,t.jsx)(n.p,{children:"\u672c\u6848\u4f8b\u7ed3\u5408DINOv3\u7684 patch\u7279\u5f81\u63d0\u53d6\u80fd\u529b \u4e0e KMeans\u805a\u7c7b\u7b97\u6cd5 \uff0c\u5b9e\u73b0Jetson Orin NX+imx219\u6444\u50cf\u5934\u7684 \u5b9e\u65f6\u89c6\u9891\u65e0\u76d1\u7763\u5206\u5272 \uff0c\u65e0\u9700\u4eba\u5de5\u6807\u6ce8\u5373\u53ef\u5c06\u89c6\u9891\u5e27\u5206\u4e3a\u524d\u666f\u3001\u80cc\u666f\u7b49\u533a\u57df\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"41-\u539f\u7406\u7b80\u4ecb",children:"4.1 \u539f\u7406\u7b80\u4ecb"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"DINOv3\uff1a\u662f\u4e00\u79cd\u81ea\u76d1\u7763\u89c6\u89c9Transformer\uff08ViT\uff09\u6a21\u578b\uff0c\u80fd\u591f\u5b66\u4e60\u5230\u4e30\u5bcc\u7684\u89c6\u89c9\u7ed3\u6784\u7279\u5f81\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"KMeans \u805a\u7c7b\uff1a\u5bf9\u6bcf\u4e00\u5e27\u56fe\u50cf\u7684 patch token \u7279\u5f81\u8fdb\u884c\u65e0\u76d1\u7763\u805a\u7c7b\uff0c\u5c06\u6bcf\u4e2a patch \u5206\u914d\u5230\u82e5\u5e72\u7c7b\u522b\uff0c\u5b9e\u73b0\u533a\u57df\u5206\u5272\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u5de5\u4f5c\u6d41\u7a0b\uff1a"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"IMX219\u6444\u50cf\u5934\u91c7\u96c6\u89c6\u9891\u5e27"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u7528 DINOv3 \u63d0\u53d6 patch \u7279\u5f81"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u5bf9\u7279\u5f81\u505a KMeans \u805a\u7c7b"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"\u805a\u7c7b\u7ed3\u679c\u53ef\u89c6\u5316\u53e0\u52a0\u5230\u539f\u56fe"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"42-\u73af\u5883\u51c6\u5907",children:"4.2 \u73af\u5883\u51c6\u5907"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u7cfb\u7edf\u5b89\u88c5\uff1a"})}),"\n",(0,t.jsx)(n.p,{children:"\u5b89\u88c5\u4f9d\u8d56\u5e93\uff0c\u652f\u6301Scikit-learn\u805a\u7c7b\u53caPyTorch\u6a21\u578b\u63a8\u7406\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"pip install scikit-learn Pillow\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u786c\u4ef6\u5b89\u88c5\uff1a"})}),"\n",(0,t.jsx)(n.p,{children:"\u5c06 IMX219 \u6444\u50cf\u5934\u8fde\u63a5\u81f3\u8bbe\u5907\uff08\u6ce8\u610f\uff1a\u8bf7\u786e\u4fdd\u6444\u50cf\u5934\u6392\u7ebf\u7684\u91d1\u5c5e\u7247\u671d\u4e0a\uff09\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(84721).A+"",width:"1197",height:"636"})}),"\n",(0,t.jsx)(n.h3,{id:"43-\u83b7\u53d6-dinov3-\u6e90\u7801",children:"4.3 \u83b7\u53d6 DINOv3 \u6e90\u7801"}),"\n",(0,t.jsx)(n.p,{children:"\u540c3.2\u8282\uff0c\u514b\u9686dinov3\u4ed3\u5e93\u5e76\u8fdb\u5165\u9879\u76ee\u76ee\u5f55\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"44-\u521b\u5efa\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6d4b\u8bd5\u4ee3\u7801",children:"4.4 \u521b\u5efa\u89c6\u9891\u6d41\u65e0\u76d1\u7763\u5206\u5272\u6d4b\u8bd5\u4ee3\u7801"}),"\n",(0,t.jsx)(n.p,{children:"\u65b0\u5efatest_dinov3\u76ee\u5f55\u53cadinov3_kmeans_test.py\u6587\u4ef6\uff0c\u7f16\u5199\u4ee5\u4e0b\u4ee3\u7801\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# \u65b0\u5efa\u5de5\u4f5c\u76ee\u5f55\r\nmkdir test_dinov3\r\ncd test_dinov3\r\n\r\n# \u7f16\u8f91\u6d4b\u8bd5\u4ee3\u7801\r\nvim dinov3_kmeans_test.py\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"\u4ee3\u7801\u793a\u4f8b\u5982\u4e0b\uff1a"})}),"\n",(0,t.jsx)(n.p,{children:"\u6ce8\uff1a\u5982\u9700\u5207\u6362 DINOv3 \u4e0d\u540c\u6a21\u578b\uff08ViT Small/Base/Large\u3001ConvNeXT\uff09\uff0c\u8bf7\u53c2\u8003\u4e0b\u8868\u4fee\u6539\u6a21\u578b\u5bfc\u5165\u548c\u5b9e\u4f8b\u5316\u4ee3\u7801\u3002\u6743\u91cd\u6587\u4ef6\u4e5f\u9700\u4e0e\u6a21\u578b\u7c7b\u578b\u5bf9\u5e94\uff0c\u5426\u5219\u4f1a\u62a5\u9519\u3002(\u5982\u9700\u4f7f\u7528\u66f4\u591a\u6a21\u578b\u67b6\u6784\u5b9a\u4e49\uff0c\u53ef\u4ee5\u53c2\u8003dinov3/models/vision_transformer.py)"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"\u6a21\u578b\u7c7b\u578b"}),(0,t.jsx)(n.th,{children:"\u5bfc\u5165\u65b9\u5f0f"}),(0,t.jsx)(n.th,{children:"\u5b9e\u4f8b\u5316\u65b9\u5f0f"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Small"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_small"}),(0,t.jsx)(n.td,{children:"model = vit_small(patch_size=16)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Base"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_base"}),(0,t.jsx)(n.td,{children:"model = vit_base(patch_size=16)"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"ViT Huge"}),(0,t.jsx)(n.td,{children:"from dinov3.models.vision_transformer import vit_huge2"}),(0,t.jsx)(n.td,{children:"model = vit_huge2(patch_size=16)"})]})]})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:'import cv2\r\nimport torch\r\nimport torchvision.transforms as transforms\r\nimport numpy as np\r\nfrom sklearn.cluster import KMeans\r\nimport time\r\n\r\nfrom dinov3.models.vision_transformer import vit_base\r\n\r\ndef preprocess_frame(frame, input_size):\r\n    # OpenCV BGR to RGB\r\n    frame_rgb = cv2.cvtColor(frame, cv2.COLOR_BGR2RGB)\r\n    pil_img = transforms.ToPILImage()(frame_rgb)\r\n    transform = transforms.Compose([\r\n        transforms.Resize((input_size, input_size)),\r\n        transforms.ToTensor(),\r\n        transforms.Normalize(mean=[0.485, 0.456, 0.406], std=[0.229, 0.224, 0.225]),\r\n    ])\r\n    tensor_img = transform(pil_img).unsqueeze(0)\r\n    return tensor_img\r\n\r\ndef segment_with_kmeans(patch_features, H, W, n_clusters=3):\r\n    # patch_features: [1, num_patches, dim]\r\n    features = patch_features[0].cpu().numpy()  # [num_patches, dim]\r\n    # \u805a\u7c7b\r\n    kmeans = KMeans(n_clusters=n_clusters, n_init=1, max_iter=50, random_state=0)\r\n    labels = kmeans.fit_predict(features)\r\n    mask = labels.reshape(H, W)\r\n    return mask\r\n\r\ndef mask_to_color(mask, n_clusters):\r\n    # \u5c06\u805a\u7c7b\u6807\u7b7e\u8f6c\u4e3a\u5f69\u8272 mask\r\n    mask_norm = np.uint8(255 * mask / (n_clusters - 1))\r\n    mask_color = cv2.applyColorMap(mask_norm, cv2.COLORMAP_JET)\r\n    return mask_color\r\n\r\ndef main(model_path, patch_size=16, input_size=224, n_clusters=3):\r\n    # 1. \u52a0\u8f7d\u6a21\u578b\r\n    model = vit_base(patch_size=patch_size)\r\n    state_dict = torch.load(model_path, map_location="cpu")\r\n    model.load_state_dict(state_dict, strict=False)\r\n    model.eval()\r\n    device = torch.device("cuda" if torch.cuda.is_available() else "cpu")\r\n    model.to(device)\r\n\r\n    # 2. \u6253\u5f00\u6444\u50cf\u5934\r\n    gst_pipeline = (\r\n        "nvarguscamerasrc ! "\r\n        "video/x-raw(memory:NVMM), width=(int)1280, height=(int)720, format=(string)NV12, framerate=(fraction)30/1 ! "\r\n        "nvvidconv ! "\r\n        "video/x-raw, format=(string)BGRx ! "\r\n        "videoconvert ! "\r\n        "video/x-raw, format=(string)BGR ! "\r\n        "appsink"\r\n    )\r\n    cap = cv2.VideoCapture(gst_pipeline, cv2.CAP_GSTREAMER)\r\n    if not cap.isOpened():\r\n        print("Error: Camera not opened")\r\n        return\r\n\r\n    print("Camera opened successfully! Press \'q\' to quit.")\r\n    while True:\r\n        t0 = time.time()\r\n        ret, frame = cap.read()\r\n        if not ret:\r\n            print("Can\'t receive frame. Exiting ...")\r\n            break\r\n\r\n        # 3. \u9884\u5904\u7406\r\n        tensor_frame = preprocess_frame(frame, input_size)\r\n        tensor_frame = tensor_frame.to(device)\r\n\r\n        # 4. DINOv3 \u7279\u5f81\u63d0\u53d6\r\n        with torch.no_grad():\r\n            features_dict = model.forward_features(tensor_frame)\r\n            patch_features = features_dict["x_norm_patchtokens"]  # [1, num_patches, dim]\r\n            num_patches = patch_features.shape[1]\r\n            H = W = int(num_patches ** 0.5)\r\n\r\n        # 5. KMeans \u805a\u7c7b\u5206\u5272\r\n        mask = segment_with_kmeans(patch_features, H, W, n_clusters=n_clusters)\r\n\r\n        # 6. mask \u5f69\u8272\u5316\u5e76resize\r\n        mask_color = mask_to_color(mask, n_clusters)\r\n        mask_resized = cv2.resize(mask_color, (frame.shape[1], frame.shape[0]), interpolation=cv2.INTER_NEAREST)\r\n\r\n        # 7. \u53e0\u52a0\u663e\u793a\r\n        overlay = cv2.addWeighted(frame, 0.6, mask_resized, 0.4, 0)\r\n\r\n        # 8. \u5e27\u7387\u663e\u793a\r\n        fps = 1.0 / (time.time() - t0)\r\n        cv2.putText(overlay, f"FPS: {fps:.2f}", (10, 30), cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\r\n\r\n        cv2.imshow(\'DINOv3 + KMeans Unsupervised Segmentation\', overlay)\r\n        if cv2.waitKey(1) & 0xFF == ord(\'q\'):\r\n            break\r\n\r\n    cap.release()\r\n    cv2.destroyAllWindows()\r\n\r\nif __name__ == \'__main__\':\r\n    import argparse\r\n    parser = argparse.ArgumentParser()\r\n    parser.add_argument(\'--model\', type=str, required=True, help=\'Path to DINOv3 .pth model\')\r\n    parser.add_argument(\'--patch_size\', type=int, default=16, help=\'Patch size (default=16)\')\r\n    parser.add_argument(\'--input_size\', type=int, default=224, help=\'Input image size (default=224)\')\r\n    parser.add_argument(\'--n_clusters\', type=int, default=3, help=\'Number of clusters for KMeans\')\r\n    args = parser.parse_args()\r\n    main(args.model, args.patch_size, args.input_size, args.n_clusters)\n'})}),"\n",(0,t.jsx)(n.h3,{id:"45-\u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b",children:"4.5 \u83b7\u53d6\u9884\u8bad\u7ec3\u6a21\u578b"}),"\n",(0,t.jsx)(n.p,{children:"KMeans\u5206\u5272\u6848\u4f8b\u9700\u4f7f\u7528 ViT Base/Large \u7b49\u6a21\u578b\u7684\u9884\u8bad\u7ec3\u6743\u91cd\uff08\u4e0e\u70ed\u529b\u56fe\u6848\u4f8b\u901a\u7528\uff09\u3002\u4e0b\u8f7d\u94fe\u63a5\u540c3.4\u8282\u3002"}),"\n",(0,t.jsx)(n.h3,{id:"46-\u6d4b\u8bd5\u9a8c\u8bc1",children:"4.6 \u6d4b\u8bd5\u9a8c\u8bc1"}),"\n",(0,t.jsx)(n.p,{children:"\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff0c\u542f\u52a8\u5b9e\u65f6\u89c6\u9891\u5206\u5272\uff08\u4ee5ViT Base\u6a21\u578b\u30012\u4e2a\u805a\u7c7b\u7c7b\u522b\u4e3a\u4f8b\uff09\uff1a"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"python test-dinov3-kmeans.py \\\r\n  --model dinov3_vitb16_pretrain.pth \\\r\n  --patch_size 16 \\\r\n  --input_size 224 \\\r\n  --n_clusters 2\n"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"--model\uff1a\u6307\u5b9a DINOv3 \u7684\u6743\u91cd\u6587\u4ef6\u8def\u5f84\uff0c\u5fc5\u987b\u4e0e\u6a21\u578b\u7ed3\u6784\u5bf9\u5e94\uff08\u5982 vit_base \u7528 vitb16 \u6743\u91cd\uff09\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"--patch_size\uff1apatch \u5927\u5c0f\uff0c\u901a\u5e38\u4e3a16\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"--input_size\uff1a\u8f93\u5165\u56fe\u7247 resize \u5927\u5c0f\uff0c\u901a\u5e38\u4e3a224\u3002"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"--n_clusters\uff1aKMeans \u805a\u7c7b\u5206\u5272\u7684\u7c7b\u522b\u6570\uff0c2\u8868\u793a\u524d\u666f/\u80cc\u666f\u5206\u5272\uff0c3\u53ca\u4ee5\u4e0a\u53ef\u5c1d\u8bd5\u66f4\u591a\u533a\u57df\u3002"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"\u6548\u679c\u5c55\u793a\u5982\u4e0b\uff0c\u5bf9\u89c6\u9891\u4e2d\u7684\u7269\u54c1\u8fdb\u884c\u65e0\u76d1\u7763\u7684\u8bc6\u522b\uff0c\u53ef\u4ee5\u6709\u6548\u5f97\u5c06\u5b9e\u65f6\u89c6\u9891\u65e0\u76d1\u7763\u5206\u5272 \uff0c\u65e0\u9700\u4eba\u5de5\u6807\u6ce8\u5373\u53ef\u5c06\u89c6\u9891\u5e27\u5206\u4e3a\u524d\u666f\u3001\u80cc\u666f\u7b49\u3002"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:r(64219).A+"",width:"637",height:"377"})}),"\n",(0,t.jsx)(n.h2,{id:"5-\u53c2\u8003\u8d44\u6e90",children:"5.\xa0 \u53c2\u8003\u8d44\u6e90"}),"\n",(0,t.jsxs)(n.p,{children:["\u25cf\xa0",(0,t.jsx)(n.a,{href:"https://github.com/facebookresearch/dinov3",children:"DINOv3 \u5b98\u65b9\u4ed3\u5e93"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u25cf\xa0",(0,t.jsx)(n.a,{href:"https://huggingface.co/facebook",children:"Hugging Face DINOv3 \u6a21\u578b\u5e93"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u25cf\xa0",(0,t.jsx)(n.a,{href:"https://developer.nvidia.com/embedded/jetson",children:"NVIDIA Jetson \u5b98\u65b9\u6587\u6863"})]}),"\n",(0,t.jsxs)(n.p,{children:["\u25cf\xa0",(0,t.jsx)(n.a,{href:"https://docs.nvidia.com/deeplearning/tensorrt/",children:"TensorRT Documentation \u2014 NVIDIA TensorRT Documentation"})]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},64219:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/DINOv3_KMeans-10dd5360a5a7ec5fda82cb0bdd664aca.gif"},76251:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/DINOv3_heatmap-8aff8856ad1559df736e70e6258e140b.png"},84721:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/NG45XX_IMX219-4236c487adf995655263def2b4558b6e.png"},28453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>d});var i=r(96540);const t={},s=i.createContext(t);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);