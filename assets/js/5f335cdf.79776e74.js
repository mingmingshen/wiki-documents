"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[8518],{14420:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>i,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"NeoEdge NG4500 Series/Application Guide/Object Detection","title":"Object Detection","description":"---","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/1-NeoEdge NG4500 Series/3-Application Guide/3-Object Detection.md","sourceDirName":"1-NeoEdge NG4500 Series/3-Application Guide","slug":"/NeoEdge NG4500 Series/Application Guide/Object Detection","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/Application Guide/Object Detection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Pose Estimation","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/Application Guide/mediapipe"},"next":{"title":"Overview","permalink":"/wiki-documents/docs/NeoEyes NE101 Series/Overview"}}');var s=r(74848),l=r(28453);const i={},c="Object Detection",o={},d=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. Environment Setup",id:"2-environment-setup",level:2},{value:"Hardware Support",id:"hardware-support",level:3},{value:"3. Quick Start with Docker (Recommended)",id:"3-quick-start-with-docker-recommended",level:2},{value:"4. Local Installation (Optional)",id:"4-local-installation-optional",level:2},{value:"Step 1: Python Environment",id:"step-1-python-environment",level:3},{value:"Step 2: Install YOLO11",id:"step-2-install-yolo11",level:3},{value:"Step 3: Install PyTorch and Torchvision",id:"step-3-install-pytorch-and-torchvision",level:3},{value:"Step 4: Install onnxruntime-gpu",id:"step-4-install-onnxruntime-gpu",level:3},{value:"5. TensorRT Acceleration",id:"5-tensorrt-acceleration",level:2},{value:"Python Example",id:"python-example",level:3},{value:"CLI Example",id:"cli-example",level:3},{value:"6. DLA (Deep Learning Accelerator)",id:"6-dla-deep-learning-accelerator",level:2},{value:"Python Example",id:"python-example-1",level:3},{value:"CLI Example",id:"cli-example-1",level:3},{value:"7. Object Detection Example",id:"7-object-detection-example",level:2},{value:"7. Benchmark Comparison",id:"7-benchmark-comparison",level:2},{value:"8. Performance Tuning",id:"8-performance-tuning",level:2},{value:"9. Common Issues",id:"9-common-issues",level:2},{value:"Appendix",id:"appendix",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"object-detection",children:"Object Detection"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,s.jsx)(n.p,{children:"YOLO11 is Ultralytics' next-gen object detection model with exceptional speed and accuracy. Local deployment on NVIDIA Jetson devices (Orin Nano/NX/AGX) enables efficient, low-latency AI inference."}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"yolo_overview",src:r(11678).A+"",width:"922",height:"367"})}),"\n",(0,s.jsx)(n.p,{children:"Guide covers:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Environment setup and JetPack installation"}),"\n",(0,s.jsx)(n.li,{children:"Quick YOLO11 run via Docker"}),"\n",(0,s.jsx)(n.li,{children:"Local YOLO11 installation"}),"\n",(0,s.jsx)(n.li,{children:"TensorRT acceleration"}),"\n",(0,s.jsx)(n.li,{children:"DLA acceleration and benchmarks"}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"YOLO11 runs with ultra performance on Jetson Orin Nano, ideal for edge AI."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"2-environment-setup",children:"2. Environment Setup"}),"\n",(0,s.jsx)(n.h3,{id:"hardware-support",children:"Hardware Support"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Device"}),(0,s.jsx)(n.th,{children:"JetPack Version"}),(0,s.jsx)(n.th,{children:"AI Performance"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Jetson Nano"}),(0,s.jsx)(n.td,{children:"JetPack 4.6.x"}),(0,s.jsx)(n.td,{children:"472 GFLOPS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Jetson Xavier NX"}),(0,s.jsx)(n.td,{children:"JetPack 5.1.x"}),(0,s.jsx)(n.td,{children:"21 TOPS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Jetson Orin NX 16GB"}),(0,s.jsx)(n.td,{children:"JetPack 6.x"}),(0,s.jsx)(n.td,{children:"100 TOPS"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Jetson Orin Nano Super"}),(0,s.jsx)(n.td,{children:"JetPack 6.x"}),(0,s.jsx)(n.td,{children:"67 TOPS"})]})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Recommended JetPack \u22655.1, enable max performance:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo nvpmodel -m 0\r\nsudo jetson_clocks\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"3-quick-start-with-docker-recommended",children:"3. Quick Start with Docker (Recommended)"}),"\n",(0,s.jsx)(n.p,{children:"Fastest method: Use pre-built Ultralytics image."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo docker pull ultralytics/ultralytics:latest-jetson-jetpack6\r\nsudo docker run -it --ipc=host --runtime=nvidia ultralytics/ultralytics:latest-jetson-jetpack6\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Includes YOLO11, PyTorch, Torchvision, TensorRT."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"4-local-installation-optional",children:"4. Local Installation (Optional)"}),"\n",(0,s.jsx)(n.p,{children:"For custom environments."}),"\n",(0,s.jsx)(n.h3,{id:"step-1-python-environment",children:"Step 1: Python Environment"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"sudo apt update\r\nsudo apt install python3-pip -y\r\npip install -U pip\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-2-install-yolo11",children:"Step 2: Install YOLO11"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install ultralytics[export]\n"})}),"\n",(0,s.jsx)(n.h3,{id:"step-3-install-pytorch-and-torchvision",children:"Step 3: Install PyTorch and Torchvision"}),"\n",(0,s.jsx)(n.p,{children:"For JetPack 6.1 + Python 3.10:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install https://github.com/ultralytics/assets/releases/download/v0.0.0/torch-2.5.0a0+872d972e41.nv24.08-cp310-cp310-linux_aarch64.whl\r\npip install https://github.com/ultralytics/assets/releases/download/v0.0.0/torchvision-0.20.0a0+afc54f7-cp310-cp310-linux_aarch64.whl\n"})}),"\n",(0,s.jsx)(n.p,{children:"Install cuSPARSELt for torch 2.5.0:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/arm64/cuda-keyring_1.1-1_all.deb\r\nsudo dpkg -i cuda-keyring_1.1-1_all.deb\r\nsudo apt-get update\r\nsudo apt-get -y install libcusparselt0 libcusparselt-dev\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"Verify torch and GPU:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'python3 -c "import torch; print(torch.__version__)" # 2.5.0a0+872d972e41.nv24.08\r\npython3 -c "import torch; print(torch.cuda.is_available())" # True\n'})}),"\n",(0,s.jsx)(n.h3,{id:"step-4-install-onnxruntime-gpu",children:"Step 4: Install onnxruntime-gpu"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"pip install https://github.com/ultralytics/assets/releases/download/v0.0.0/onnxruntime_gpu-1.20.0-cp310-cp310-linux_aarch64.whl\n"})}),"\n",(0,s.jsx)(n.h2,{id:"5-tensorrt-acceleration",children:"5. TensorRT Acceleration"}),"\n",(0,s.jsxs)(n.p,{children:["Ultralytics supports exporting models to TensorRT (",(0,s.jsx)(n.code,{children:".engine"}),") for performance boost."]}),"\n",(0,s.jsx)(n.h3,{id:"python-example",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:'from ultralytics import YOLO\r\n\r\nmodel = YOLO("yolo11n.pt")\r\nmodel.export(format="engine")  # Generates yolo11n.engine\r\n\r\ntrt_model = YOLO("yolo11n.engine")\r\nresults = trt_model("https://ultralytics.com/images/bus.jpg")\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cli-example",children:"CLI Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Export to TensorRT\r\nyolo export model=yolo11n.pt format=engine\r\n# Run inference\r\nyolo predict model=yolo11n.engine source='https://ultralytics.com/images/bus.jpg'\n"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"6-dla-deep-learning-accelerator",children:"6. DLA (Deep Learning Accelerator)"}),"\n",(0,s.jsx)(n.p,{children:"Jetson devices feature DLA for lower power and higher concurrency."}),"\n",(0,s.jsx)(n.h3,{id:"python-example-1",children:"Python Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'model.export(format="engine", device="dla:0", half=True)\n'})}),"\n",(0,s.jsx)(n.h3,{id:"cli-example-1",children:"CLI Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"# Export with DLA\r\nyolo export model=yolo11n.pt format=engine device=\"dla:0\" half=True\r\n# Run on DLA\r\nyolo predict model=yolo11n.engine source='https://ultralytics.com/images/bus.jpg'\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"Some layers may fall back to GPU if unsupported by DLA."}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"7-object-detection-example",children:"7. Object Detection Example"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-python",children:'import cv2\r\nimport time\r\nfrom ultralytics import YOLO\r\n\r\n# Load TensorRT model\r\nmodel = YOLO("yolo11n.engine") \r\n\r\n# Open USB camera\r\ncap = cv2.VideoCapture(0)\r\ncap.set(cv2.CAP_PROP_FRAME_WIDTH, 640)\r\ncap.set(cv2.CAP_PROP_FRAME_HEIGHT, 480)\r\n\r\n# FPS calculation\r\nfps = 0.0\r\nframe_count = 0\r\nstart_time = time.time()\r\n\r\nprint("\ud83d\udcf8 Real-time detection started. Press \'q\' to quit.")\r\nwhile True:\r\n    ret, frame = cap.read()\r\n    if not ret:\r\n        break\r\n    \r\n    t0 = time.time()\r\n    results = model(frame)\r\n    annotated = results[0].plot()\r\n    \r\n    frame_count += 1\r\n    t1 = time.time()\r\n    fps = 1. / (t1 - t0)\r\n    \r\n    cv2.putText(annotated, f"FPS: {fps:.2f}", (10, 30),\r\n                cv2.FONT_HERSHEY_SIMPLEX, 1, (0, 255, 0), 2)\r\n    \r\n    cv2.imshow("YOLO11 - TensorRT Real-time Detection", annotated)\r\n    if cv2.waitKey(1) & 0xFF == ord("q"):\r\n        break\r\n\r\ncap.release()\r\ncv2.destroyAllWindows()\n'})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"yolo_od",src:r(62326).A+"",width:"1920",height:"1080"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"7-benchmark-comparison",children:"7. Benchmark Comparison"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Model Format"}),(0,s.jsx)(n.th,{children:"Orin Nano (ms)"}),(0,s.jsx)(n.th,{children:"mAP50-95"}),(0,s.jsx)(n.th,{children:"Orin NX (ms)"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"PyTorch"}),(0,s.jsx)(n.td,{children:"21.3"}),(0,s.jsx)(n.td,{children:"0.6176"}),(0,s.jsx)(n.td,{children:"19.5"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TorchScript"}),(0,s.jsx)(n.td,{children:"13.4"}),(0,s.jsx)(n.td,{children:"0.6100"}),(0,s.jsx)(n.td,{children:"13.03"})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TensorRT (FP16)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"4.91"})}),(0,s.jsx)(n.td,{children:"0.6096"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"4.85"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TensorRT (INT8)"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.strong,{children:"3.91"})}),(0,s.jsx)(n.td,{children:"0.3180"}),(0,s.jsx)(n.td,{children:"4.37"})]})]})]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"\ud83d\udca1 TensorRT INT8 fastest, FP16 better accuracy."}),"\n"]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"8-performance-tuning",children:"8. Performance Tuning"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Optimization"}),(0,s.jsx)(n.th,{children:"Recommendation"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Power Mode"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sudo nvpmodel -m 0"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"CPU/GPU Freq"}),(0,s.jsx)(n.td,{children:(0,s.jsx)(n.code,{children:"sudo jetson_clocks"})})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Monitoring"}),(0,s.jsxs)(n.td,{children:[(0,s.jsx)(n.code,{children:"sudo pip install jetson-stats"})," \u2192 ",(0,s.jsx)(n.code,{children:"jtop"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Memory"}),(0,s.jsx)(n.td,{children:"Proper swap allocation"})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"9-common-issues",children:"9. Common Issues"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Issue"}),(0,s.jsx)(n.th,{children:"Solution"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Can't import PyTorch"}),(0,s.jsxs)(n.td,{children:["Use correct Jetson ",(0,s.jsx)(n.code,{children:".whl"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"TensorRT slower than expected"}),(0,s.jsxs)(n.td,{children:["Enable ",(0,s.jsx)(n.code,{children:"jetson_clocks"})," + FP16"]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Can't pull Docker image"}),(0,s.jsxs)(n.td,{children:["Ensure ",(0,s.jsx)(n.code,{children:"--runtime=nvidia"})]})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"No tensorrt in venv"}),(0,s.jsxs)(n.td,{children:["Copy from host: ",(0,s.jsx)(n.code,{children:"cp -r /usr/lib/python3.10/dist-packages/tensorrt your_venv/lib/python3.10/site-packages/"})]})]})]})]}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"appendix",children:"Appendix"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://docs.ultralytics.com/",children:"Ultralytics YOLO11 Docs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://forums.developer.nvidia.com/",children:"Jetson Forum"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://forums.developer.nvidia.com/t/pytorch-for-jetson-version-1-14-now-available/72048",children:"PyTorch for Jetson"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},62326:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/yolo_od-82baf6b690064499672f9464dbf5dd9d.png"},11678:(e,n,r)=>{r.d(n,{A:()=>t});const t=r.p+"assets/images/yolo_overview-f2ab43829aa3c2cb450a45f1ba698173.png"},28453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>c});var t=r(96540);const s={},l=t.createContext(s);function i(e){const n=t.useContext(l);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(l.Provider,{value:n},e.children)}}}]);