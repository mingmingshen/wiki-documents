"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[778],{91025:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Software Frameworks and Tools/deepstream","title":"DeepStream","description":"---","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board/2-Software Guide/3-Software Frameworks and Tools/3-deepstream.md","sourceDirName":"1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board/2-Software Guide/3-Software Frameworks and Tools","slug":"/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Software Frameworks and Tools/deepstream","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Software Frameworks and Tools/deepstream","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"n8n","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Software Frameworks and Tools/n8n"},"next":{"title":"jtop","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Software Frameworks and Tools/jtop"}}');var r=s(74848),a=s(28453);const t={},l="DeepStream",d={},o=[{value:"1. Overview",id:"1-overview",level:2},{value:"2. System Requirements",id:"2-system-requirements",level:2},{value:"Hardware",id:"hardware",level:3},{value:"Software",id:"software",level:3},{value:"3. Installing DeepStream",id:"3-installing-deepstream",level:2},{value:"glib Migration",id:"glib-migration",level:3},{value:"Dependency Installation",id:"dependency-installation",level:3},{value:"Install librdkafka",id:"install-librdkafka",level:3},{value:"Method 1: Install via SDK Manager",id:"method-1-install-via-sdk-manager",level:3},{value:"Method 2: Using DeepStream Tar Package",id:"method-2-using-deepstream-tar-package",level:3},{value:"Method 3: Using DeepStream Debian Package",id:"method-3-using-deepstream-debian-package",level:3},{value:"Method 4: Using Docker",id:"method-4-using-docker",level:3},{value:"Installation Verification",id:"installation-verification",level:3},{value:"4. Running Examples",id:"4-running-examples",level:2},{value:"Step 1: Run Default Example",id:"step-1-run-default-example",level:3},{value:"Step 2: Using USB or CSI Camera",id:"step-2-using-usb-or-csi-camera",level:3},{value:"Step 3: Using RTSP Stream",id:"step-3-using-rtsp-stream",level:3},{value:"Step 4: Video Detection",id:"step-4-video-detection",level:3},{value:"5. Integrating Custom Models",id:"5-integrating-custom-models",level:2},{value:"Step 1: Model Conversion",id:"step-1-model-conversion",level:3},{value:"Step 2: Update Configuration File",id:"step-2-update-configuration-file",level:3},{value:"6. More Examples",id:"6-more-examples",level:2},{value:"7. Tips and Troubleshooting",id:"7-tips-and-troubleshooting",level:2},{value:"8. Appendix",id:"8-appendix",level:2},{value:"Key Paths",id:"key-paths",level:3},{value:"References",id:"references",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,a.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"deepstream",children:"DeepStream"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["This guide explains how to install and run ",(0,r.jsx)(n.strong,{children:"NVIDIA DeepStream SDK"})," on ",(0,r.jsx)(n.strong,{children:"Jetson Orin"})," devices. DeepStream supports GPU-accelerated AI video analytics pipelines and is highly optimized for Jetson's CUDA/NvMedia platform."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"1-overview",children:"1. Overview"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Real-time video analytics SDK provided by NVIDIA"}),"\n",(0,r.jsx)(n.li,{children:"Accelerated with TensorRT and CUDA"}),"\n",(0,r.jsx)(n.li,{children:"Supports multi-stream AI inference and object tracking"}),"\n",(0,r.jsx)(n.li,{children:"Input sources include RTSP, USB, CSI cameras, and local video files"}),"\n",(0,r.jsx)(n.li,{children:"Built-in object detection, classification, and tracking capabilities"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This guide covers:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Installation methods (.deb package and Docker)"}),"\n",(0,r.jsx)(n.li,{children:"Running sample pipelines"}),"\n",(0,r.jsx)(n.li,{children:"Integrating custom models"}),"\n",(0,r.jsx)(n.li,{children:"Docker usage (including jetson-containers)"}),"\n",(0,r.jsx)(n.li,{children:"Common issues and tips"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"overview",src:s(45640).A+"",width:"914",height:"485"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"2-system-requirements",children:"2. System Requirements"}),"\n",(0,r.jsx)(n.h3,{id:"hardware",children:"Hardware"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Component"}),(0,r.jsx)(n.th,{children:"Minimum Requirement"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Device"}),(0,r.jsx)(n.td,{children:"Jetson Orin Nano / NX / AGX"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RAM"}),(0,r.jsx)(n.td,{children:"\u2265 8GB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Storage"}),(0,r.jsx)(n.td,{children:"\u2265 10GB"})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"software",children:"Software"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"JetPack 6.1 GA or later (L4T \u2265 R36.4)"}),"\n",(0,r.jsx)(n.li,{children:"Ubuntu 20.04 / 22.04"}),"\n",(0,r.jsx)(n.li,{children:"CUDA, TensorRT, cuDNN (included in JetPack)"}),"\n",(0,r.jsx)(n.li,{children:"Docker (optional, for containerized deployment)"}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"3-installing-deepstream",children:"3. Installing DeepStream"}),"\n",(0,r.jsx)(n.h3,{id:"glib-migration",children:"glib Migration"}),"\n",(0,r.jsx)(n.p,{children:"To migrate to a newer glib version (e.g., 2.76.6), follow these steps:"}),"\n",(0,r.jsx)(n.p,{children:"Prerequisites: Install the following packages:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo pip3 install meson  \r\nsudo pip3 install ninja  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Compilation and installation steps:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/GNOME/glib.git  \r\ncd glib  \r\ngit checkout <glib-version-branch>  \r\n# e.g., 2.76.6  \r\nmeson build --prefix=/usr  \r\nninja -C build/  \r\ncd build/  \r\nsudo ninja install  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Verify the installed glib version:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"pkg-config --modversion glib-2.0  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"dependency-installation",children:"Dependency Installation"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt update  \r\nsudo apt install -y \\  \r\n  libssl1.1 \\  \r\n  libgstreamer1.0-0 \\  \r\n  gstreamer1.0-tools \\  \r\n  gstreamer1.0-plugins-good \\  \r\n  gstreamer1.0-plugins-bad \\  \r\n  gstreamer1.0-plugins-ugly \\  \r\n  gstreamer1.0-libav \\  \r\n  libgstrtspserver-1.0-0 \\  \r\n  libjansson4 \\  \r\n  libyaml-cpp-dev  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"install-librdkafka",children:"Install librdkafka"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Clone the librdkafka repository from GitHub:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/confluentinc/librdkafka.git  \n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Configure and build the library:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd librdkafka  \r\ngit checkout tags/v2.2.0  \r\n./configure --enable-ssl  \r\nmake  \r\nsudo make install  \n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Copy the generated libraries to the DeepStream directory:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo mkdir -p /opt/nvidia/deepstream/deepstream/lib  \r\nsudo cp /usr/local/lib/librdkafka* /opt/nvidia/deepstream/deepstream/lib  \r\nsudo ldconfig  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"method-1-install-via-sdk-manager",children:"Method 1: Install via SDK Manager"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Download and install SDK Manager from the ",(0,r.jsx)(n.a,{href:"https://developer.nvidia.com/nvidia-sdk-manager",children:"NVIDIA official website"}),"."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Connect the device: Use a USB-C cable to connect the Jetson Orin device to the host computer."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Launch SDK Manager: Run the ",(0,r.jsx)(n.code,{children:"sdkmanager"})," command on the host and log in with your NVIDIA developer account."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Select target hardware and JetPack version: Choose the corresponding Jetson Orin device and appropriate JetPack version in SDK Manager."}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:'Enable DeepStream SDK: Check the DeepStream SDK option under "Additional SDKs."'}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Begin installation: Follow the prompts to complete the installation."}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"method-2-using-deepstream-tar-package",children:"Method 2: Using DeepStream Tar Package"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Download DeepStream SDK: Visit the ",(0,r.jsx)(n.a,{href:"https://catalog.ngc.nvidia.com/orgs/nvidia/resources/deepstream",children:"NVIDIA DeepStream download page"})," and download the DeepStream SDK tar package for Jetson (e.g., ",(0,r.jsx)(n.code,{children:"deepstream_sdk_v7.1.0_jetson.tbz2"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Extract and install:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo tar -xvf deepstream_sdk_v7.1.0_jetson.tbz2 -C /  \r\ncd /opt/nvidia/deepstream/deepstream-7.1  \r\nsudo ./install.sh  \r\nsudo ldconfig  \n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"method-3-using-deepstream-debian-package",children:"Method 3: Using DeepStream Debian Package"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:["Download DeepStream Debian: Visit the ",(0,r.jsx)(n.a,{href:"https://catalog.ngc.nvidia.com/orgs/nvidia/resources/deepstream",children:"DeepStream Debian download page"})," and download the DeepStream SDK tar package for Jetson (e.g., ",(0,r.jsx)(n.code,{children:"deepstream-7.1_7.1.0-1_arm64.deb"}),")."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Install:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo apt-get install ./deepstream-7.1_7.1.0-1_arm64.deb  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"method-4-using-docker",children:"Method 4: Using Docker"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Install Docker and NVIDIA Container Toolkit"}),": Ensure Docker and NVIDIA Container Toolkit are installed."]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:"Pull the DeepStream Docker image:"}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker pull nvcr.io/nvidia/deepstream-l4t:6.1-samples  \n"})}),"\n",(0,r.jsxs)(n.ol,{start:"3",children:["\n",(0,r.jsx)(n.li,{children:"Run the container:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"docker run -it --rm --runtime=nvidia \\  \r\n  -v /tmp/.X11-unix:/tmp/.X11-unix \\  \r\n  -e DISPLAY=$DISPLAY \\  \r\n  nvcr.io/nvidia/deepstream-l4t:6.1-samples  \n"})}),"\n",(0,r.jsxs)(n.p,{children:["Alternatively, use the community-maintained ",(0,r.jsx)(n.a,{href:"https://github.com/dusty-nv/jetson-containers",children:"jetson-containers"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"jetson-containers run dusty-nv/deepstream  \n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"installation-verification",children:"Installation Verification"}),"\n",(0,r.jsx)(n.p,{children:"Check version information:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"deepstream-app --version-all  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Expected output:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"deepstream-app version 7.1.0  \r\nDeepStreamSDK 7.1.0  \r\nCUDA Driver Version: 12.6  \r\nCUDA Runtime Version: 12.6  \r\nTensorRT Version: 10.3  \r\ncuDNN Version: 9.0  \r\nlibNVWarp360 Version: 2.0.1d3  \n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"4-running-examples",children:"4. Running Examples"}),"\n",(0,r.jsx)(n.h3,{id:"step-1-run-default-example",children:"Step 1: Run Default Example"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Navigate to the configs/deepstream-app directory on the dev kit:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd /opt/nvidia/deepstream/deepstream-7.1/samples/configs/deepstream-app  \n"})}),"\n",(0,r.jsxs)(n.ol,{start:"2",children:["\n",(0,r.jsx)(n.li,{children:"Run the reference application:"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"# deepstream-app -c <path_to_config_file>  \r\ndeepstream-app -c source30_1080p_dec_infer-resnet_tiled_display_int8.txt  \n"})}),"\n",(0,r.jsx)(n.p,{children:"This command will pop up a video window displaying real-time detection results:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"deepstream_app_5x8",src:s(48239).A+"",width:"1803",height:"1019"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"step-2-using-usb-or-csi-camera",children:"Step 2: Using USB or CSI Camera"}),"\n",(0,r.jsx)(n.p,{children:"Modify the input section in the configuration file:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[source0]  \r\nenable=1  \r\ntype=1  \r\ncamera-width=1280  \r\ncamera-height=720  \r\ncamera-fps-n=30  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Then run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"deepstream-app -c <your_camera_config>.txt  \n"})}),"\n",(0,r.jsxs)(n.blockquote,{children:["\n",(0,r.jsxs)(n.p,{children:["\ud83c\udfa5 USB cameras use ",(0,r.jsx)(n.code,{children:"type=1"}),", while CSI cameras use ",(0,r.jsx)(n.code,{children:"nvarguscamerasrc"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"step-3-using-rtsp-stream",children:"Step 3: Using RTSP Stream"}),"\n",(0,r.jsx)(n.p,{children:"Use the following configuration snippet:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[source0]  \r\nenable=1  \r\ntype=4  \r\nuri=rtsp://<your-camera-stream>  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-4-video-detection",children:"Step 4: Video Detection"}),"\n",(0,r.jsx)(n.p,{children:"Navigate to the example folder:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"cd /opt/nvidia/deepstream/deepstream-7.1/sources/apps/sample_apps/deepstream-test1  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Compile the source code:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"sudo make CUDA_VER=12.6  \n"})}),"\n",(0,r.jsx)(n.p,{children:"Run:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"./deepstream-test1-app dstest1_config.yml  \n"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"deepstream_od",src:s(37261).A+"",width:"1920",height:"1080"})}),"\n",(0,r.jsxs)(n.p,{children:["For more source examples, see ",(0,r.jsx)(n.code,{children:"/opt/nvidia/deepstream/deepstream/sources"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"5-integrating-custom-models",children:"5. Integrating Custom Models"}),"\n",(0,r.jsx)(n.p,{children:"DeepStream supports integrating custom models via TensorRT or ONNX."}),"\n",(0,r.jsx)(n.h3,{id:"step-1-model-conversion",children:"Step 1: Model Conversion"}),"\n",(0,r.jsxs)(n.p,{children:["Use ",(0,r.jsx)(n.code,{children:"trtexec"})," or ",(0,r.jsx)(n.code,{children:"tao-converter"}),":"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"trtexec --onnx=model.onnx --saveEngine=model.engine  \n"})}),"\n",(0,r.jsx)(n.h3,{id:"step-2-update-configuration-file",children:"Step 2: Update Configuration File"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-ini",children:"[primary-gie]  \r\nenable=1  \r\nmodel-engine-file=model.engine  \r\nnetwork-type=0  \n"})}),"\n",(0,r.jsxs)(n.p,{children:["For more DeepStream TAO examples, visit ",(0,r.jsx)(n.a,{href:"https://github.com/NVIDIA-AI-IOT/deepstream_tao_apps",children:"https://github.com/NVIDIA-AI-IOT/deepstream_tao_apps"}),"."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"6-more-examples",children:"6. More Examples"}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.a,{href:"https://github.com/NVIDIA-AI-IOT/deepstream_python_apps/tree/master",children:"deepstream_python_apps"}),(0,r.jsx)(n.br,{}),"\n",(0,r.jsx)(n.img,{alt:"deepstream_python",src:s(42674).A+"",width:"1920",height:"1440"})]}),"\n",(0,r.jsx)(n.h2,{id:"7-tips-and-troubleshooting",children:"7. Tips and Troubleshooting"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Issue"}),(0,r.jsx)(n.th,{children:"Solution"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"No display in Docker"}),(0,r.jsxs)(n.td,{children:["Mount X11 socket and set ",(0,r.jsx)(n.code,{children:"DISPLAY"})," variable"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Low frame rate"}),(0,r.jsx)(n.td,{children:"Use INT8 engine or reduce input resolution"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"USB camera not detected"}),(0,r.jsxs)(n.td,{children:["Check devices with ",(0,r.jsx)(n.code,{children:"v4l2-ctl --list-devices"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GStreamer errors"}),(0,r.jsx)(n.td,{children:"Verify plugin installation or reflash JetPack"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"RTSP latency/dropped frames"}),(0,r.jsxs)(n.td,{children:["Set ",(0,r.jsx)(n.code,{children:"drop-frame-interval=0"})," and ",(0,r.jsx)(n.code,{children:"latency=200"})]})]})]})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"8-appendix",children:"8. Appendix"}),"\n",(0,r.jsx)(n.h3,{id:"key-paths",children:"Key Paths"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Purpose"}),(0,r.jsx)(n.th,{children:"Path"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Sample config files"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/opt/nvidia/deepstream/deepstream/samples/configs/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Model engine files"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/opt/nvidia/deepstream/deepstream/models/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Log directory"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/opt/nvidia/deepstream/logs/"})})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"DeepStream CLI tool"}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"/usr/bin/deepstream-app"})})]})]})]}),"\n",(0,r.jsx)(n.h3,{id:"references",children:"References"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://developer.nvidia.com/deepstream-sdk",children:"DeepStream Official Page"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://catalog.ngc.nvidia.com/orgs/nvidia/containers/deepstream",children:"NGC Container Registry - DeepStream"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"https://github.com/dusty-nv/jetson-containers",children:"GitHub - dusty-nv/jetson-containers"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},45640:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/NG45XX_deepstream_overview-6ea531f5644535084d5a6900f48488a6.png"},48239:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/deepstream_app_1-452be66fd747ab1c5c98c6a2cf08a0de.png"},37261:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/deepstream_od-6a67e1b73fe98147cd8553ff37726f2e.png"},42674:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/deepstream_python-2b9a3cda9ff5d02256f3096fc57b478d.png"},28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>l});var i=s(96540);const r={},a=i.createContext(r);function t(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);